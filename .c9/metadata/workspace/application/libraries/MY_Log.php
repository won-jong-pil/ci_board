{"filter":false,"title":"MY_Log.php","tooltip":"/application/libraries/MY_Log.php","undoManager":{"mark":34,"position":34,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":230,"column":0},"action":"insert","lines":["<?php","/**"," * CodeIgniter"," *"," * An open source application development framework for PHP"," *"," * This content is released under the MIT License (MIT)"," *"," * Copyright (c) 2014 - 2015, British Columbia Institute of Technology"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy"," * of this software and associated documentation files (the \"Software\"), to deal"," * in the Software without restriction, including without limitation the rights"," * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell"," * copies of the Software, and to permit persons to whom the Software is"," * furnished to do so, subject to the following conditions:"," *"," * The above copyright notice and this permission notice shall be included in"," * all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR"," * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE"," * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER"," * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,"," * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN"," * THE SOFTWARE."," *"," * @package\tCodeIgniter"," * @author\tEllisLab Dev Team"," * @copyright\tCopyright (c) 2008 - 2014, EllisLab, Inc. (http://ellislab.com/)"," * @copyright\tCopyright (c) 2014 - 2015, British Columbia Institute of Technology (http://bcit.ca/)"," * @license\thttp://opensource.org/licenses/MIT\tMIT License"," * @link\thttp://codeigniter.com"," * @since\tVersion 1.0.0"," * @filesource"," */","defined('BASEPATH') OR exit('No direct script access allowed');","","/**"," * Logging Class"," *"," * @package\t\tCodeIgniter"," * @subpackage\tLibraries"," * @category\tLogging"," * @author\t\tEllisLab Dev Team"," * @link\t\thttp://codeigniter.com/user_guide/general/errors.html"," */","class CI_Log {","","\t/**","\t * Path to save log files","\t *","\t * @var string","\t */","\tprotected $_log_path;","","\t/**","\t * File permissions","\t *","\t * @var\tint","\t */","\tprotected $_file_permissions = 0644;","","\t/**","\t * Level of logging","\t *","\t * @var int","\t */","\tprotected $_threshold = 1;","","\t/**","\t * Array of threshold levels to log","\t *","\t * @var array","\t */","\tprotected $_threshold_array = array();","","\t/**","\t * Format of timestamp for log files","\t *","\t * @var string","\t */","\tprotected $_date_fmt = 'Y-m-d H:i:s';","","\t/**","\t * Filename extension","\t *","\t * @var\tstring","\t */","\tprotected $_file_ext;","","\t/**","\t * Whether or not the logger can write to the log files","\t *","\t * @var bool","\t */","\tprotected $_enabled = TRUE;","","\t/**","\t * Predefined logging levels","\t *","\t * @var array","\t */","\tprotected $_levels = array('ERROR' => 1, 'DEBUG' => 2, 'INFO' => 3, 'ALL' => 4);","","\t// --------------------------------------------------------------------","","\t/**","\t * Class constructor","\t *","\t * @return\tvoid","\t */","\tpublic function __construct()","\t{","\t\t$config =& get_config();","","\t\t$this->_log_path = ($config['log_path'] !== '') ? $config['log_path'] : APPPATH.'logs/';","\t\t$this->_file_ext = (isset($config['log_file_extension']) && $config['log_file_extension'] !== '')","\t\t\t? ltrim($config['log_file_extension'], '.') : 'php';","","\t\tfile_exists($this->_log_path) OR mkdir($this->_log_path, 0755, TRUE);","","\t\tif ( ! is_dir($this->_log_path) OR ! is_really_writable($this->_log_path))","\t\t{","\t\t\t$this->_enabled = FALSE;","\t\t}","","\t\tif (is_numeric($config['log_threshold']))","\t\t{","\t\t\t$this->_threshold = (int) $config['log_threshold'];","\t\t}","\t\telseif (is_array($config['log_threshold']))","\t\t{","\t\t\t$this->_threshold = 0;","\t\t\t$this->_threshold_array = array_flip($config['log_threshold']);","\t\t}","","\t\tif ( ! empty($config['log_date_format']))","\t\t{","\t\t\t$this->_date_fmt = $config['log_date_format'];","\t\t}","","\t\tif ( ! empty($config['log_file_permissions']) && is_int($config['log_file_permissions']))","\t\t{","\t\t\t$this->_file_permissions = $config['log_file_permissions'];","\t\t}","\t}","","\t// --------------------------------------------------------------------","","\t/**","\t * Write Log File","\t *","\t * Generally this function will be called using the global log_message() function","\t *","\t * @param\tstring\tthe error level: 'error', 'debug' or 'info'","\t * @param\tstring\tthe error message","\t * @return\tbool","\t */","\tpublic function write_log($level, $msg)","\t{","\t\tif ($this->_enabled === FALSE)","\t\t{","\t\t\treturn FALSE;","\t\t}","","\t\t$level = strtoupper($level);","","\t\tif (( ! isset($this->_levels[$level]) OR ($this->_levels[$level] > $this->_threshold))","\t\t\t&& ! isset($this->_threshold_array[$this->_levels[$level]]))","\t\t{","\t\t\treturn FALSE;","\t\t}","","\t\t$filepath = $this->_log_path.'log-'.date('Y-m-d').'.'.$this->_file_ext;","\t\t$message = '';","","\t\tif ( ! file_exists($filepath))","\t\t{","\t\t\t$newfile = TRUE;","\t\t\t// Only add protection to php files","\t\t\tif ($this->_file_ext === 'php')","\t\t\t{","\t\t\t\t$message .= \"<?php defined('BASEPATH') OR exit('No direct script access allowed'); ?>\\n\\n\";","\t\t\t}","\t\t}","","\t\tif ( ! $fp = @fopen($filepath, 'ab'))","\t\t{","\t\t\treturn FALSE;","\t\t}","","\t\t// Instantiating DateTime with microseconds appended to initial date is needed for proper support of this format","\t\tif (strpos($this->_date_fmt, 'u') !== FALSE)","\t\t{","\t\t\t$microtime_full = microtime(TRUE);","\t\t\t$microtime_short = sprintf(\"%06d\", ($microtime_full - floor($microtime_full)) * 1000000);","\t\t\t$date = new DateTime(date('Y-m-d H:i:s.'.$microtime_short, $microtime_full));","\t\t\t$date = $date->format($this->_date_fmt);","\t\t}","\t\telse","\t\t{","\t\t\t$date = date($this->_date_fmt);","\t\t}","","\t\t$message .= $level.' - '.$date.' --> '.$msg.\"\\n\";","","\t\tflock($fp, LOCK_EX);","","\t\tfor ($written = 0, $length = strlen($message); $written < $length; $written += $result)","\t\t{","\t\t\tif (($result = fwrite($fp, substr($message, $written))) === FALSE)","\t\t\t{","\t\t\t\tbreak;","\t\t\t}","\t\t}","","\t\tflock($fp, LOCK_UN);","\t\tfclose($fp);","","\t\tif (isset($newfile) && $newfile === TRUE)","\t\t{","\t\t\tchmod($filepath, $this->_file_permissions);","\t\t}","","\t\treturn is_int($result);","\t}","","}",""]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":0},"end":{"row":48,"column":14},"action":"remove","lines":["class CI_Log {"]},{"start":{"row":48,"column":0},"end":{"row":49,"column":43},"action":"insert","lines":["<?PHP if ( ! defined('BASEPATH')) exit('No direct script access allowed');","class MY_Pagination extends CI_Pagination {"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":0},"end":{"row":48,"column":74},"action":"remove","lines":["<?PHP if ( ! defined('BASEPATH')) exit('No direct script access allowed');"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":9},"end":{"row":48,"column":19},"action":"remove","lines":["Pagination"]},{"start":{"row":48,"column":9},"end":{"row":48,"column":10},"action":"insert","lines":["L"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":10},"end":{"row":48,"column":11},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":11},"end":{"row":48,"column":12},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":24},"end":{"row":48,"column":34},"action":"remove","lines":["Pagination"]},{"start":{"row":48,"column":24},"end":{"row":48,"column":25},"action":"insert","lines":["L"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":25},"end":{"row":48,"column":26},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":26},"end":{"row":48,"column":27},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":0},"end":{"row":107,"column":0},"action":"remove","lines":["","\t/**","\t * Path to save log files","\t *","\t * @var string","\t */","\tprotected $_log_path;","","\t/**","\t * File permissions","\t *","\t * @var\tint","\t */","\tprotected $_file_permissions = 0644;","","\t/**","\t * Level of logging","\t *","\t * @var int","\t */","\tprotected $_threshold = 1;","","\t/**","\t * Array of threshold levels to log","\t *","\t * @var array","\t */","\tprotected $_threshold_array = array();","","\t/**","\t * Format of timestamp for log files","\t *","\t * @var string","\t */","\tprotected $_date_fmt = 'Y-m-d H:i:s';","","\t/**","\t * Filename extension","\t *","\t * @var\tstring","\t */","\tprotected $_file_ext;","","\t/**","\t * Whether or not the logger can write to the log files","\t *","\t * @var bool","\t */","\tprotected $_enabled = TRUE;","","\t/**","\t * Predefined logging levels","\t *","\t * @var array","\t */","\tprotected $_levels = array('ERROR' => 1, 'DEBUG' => 2, 'INFO' => 3, 'ALL' => 4);","","\t// --------------------------------------------------------------------",""]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":0},"end":{"row":50,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":54,"column":0},"end":{"row":88,"column":2},"action":"remove","lines":["\tpublic function __construct()","\t{","\t\t$config =& get_config();","","\t\t$this->_log_path = ($config['log_path'] !== '') ? $config['log_path'] : APPPATH.'logs/';","\t\t$this->_file_ext = (isset($config['log_file_extension']) && $config['log_file_extension'] !== '')","\t\t\t? ltrim($config['log_file_extension'], '.') : 'php';","","\t\tfile_exists($this->_log_path) OR mkdir($this->_log_path, 0755, TRUE);","","\t\tif ( ! is_dir($this->_log_path) OR ! is_really_writable($this->_log_path))","\t\t{","\t\t\t$this->_enabled = FALSE;","\t\t}","","\t\tif (is_numeric($config['log_threshold']))","\t\t{","\t\t\t$this->_threshold = (int) $config['log_threshold'];","\t\t}","\t\telseif (is_array($config['log_threshold']))","\t\t{","\t\t\t$this->_threshold = 0;","\t\t\t$this->_threshold_array = array_flip($config['log_threshold']);","\t\t}","","\t\tif ( ! empty($config['log_date_format']))","\t\t{","\t\t\t$this->_date_fmt = $config['log_date_format'];","\t\t}","","\t\tif ( ! empty($config['log_file_permissions']) && is_int($config['log_file_permissions']))","\t\t{","\t\t\t$this->_file_permissions = $config['log_file_permissions'];","\t\t}","\t}"]},{"start":{"row":54,"column":0},"end":{"row":57,"column":5},"action":"insert","lines":["    public function __construct($config = array())","    {","        parent::__construct($config);","    }"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":0},"end":{"row":53,"column":4},"action":"remove","lines":["\t/**","\t * Class constructor","\t *","\t * @return\tvoid","\t */"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":33},"end":{"row":50,"column":49},"action":"remove","lines":["config = array()"]}]}],[{"group":"doc","deltas":[{"start":{"row":52,"column":28},"end":{"row":52,"column":35},"action":"remove","lines":["$config"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":32},"end":{"row":50,"column":33},"action":"remove","lines":["$"]}]}],[{"group":"doc","deltas":[{"start":{"row":81,"column":38},"end":{"row":81,"column":44},"action":"insert","lines":["$level"]}]}],[{"group":"doc","deltas":[{"start":{"row":81,"column":44},"end":{"row":81,"column":45},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":81,"column":45},"end":{"row":81,"column":46},"action":"insert","lines":["."]}]}],[{"group":"doc","deltas":[{"start":{"row":81,"column":45},"end":{"row":81,"column":47},"action":"insert","lines":["''"]}]}],[{"group":"doc","deltas":[{"start":{"row":81,"column":46},"end":{"row":81,"column":47},"action":"insert","lines":["-"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":2},"end":{"row":67,"column":3},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":3},"end":{"row":67,"column":4},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":4},"end":{"row":67,"column":5},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":5},"end":{"row":67,"column":6},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":6},"end":{"row":67,"column":7},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":7},"end":{"row":67,"column":13},"action":"insert","lines":["$level"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":13},"end":{"row":67,"column":14},"action":"insert","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":14},"end":{"row":67,"column":15},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":15},"end":{"row":67,"column":16},"action":"insert","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":16},"end":{"row":67,"column":17},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":17},"end":{"row":67,"column":18},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":67,"column":18},"end":{"row":67,"column":19},"action":"insert","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":21},"end":{"row":48,"column":27},"action":"remove","lines":["CI_Log"]},{"start":{"row":48,"column":21},"end":{"row":48,"column":27},"action":"insert","lines":["CI_Log"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":0},"end":{"row":53,"column":5},"action":"remove","lines":["    public function __construct()","    {","        parent::__construct();","    }"]},{"start":{"row":50,"column":0},"end":{"row":54,"column":0},"action":"insert","lines":["    public function __construct($config = array())","    {","        parent::__construct($config);","    }",""]}]}],[{"group":"doc","deltas":[{"start":{"row":52,"column":37},"end":{"row":53,"column":0},"action":"insert","lines":["",""]},{"start":{"row":53,"column":0},"end":{"row":53,"column":8},"action":"insert","lines":["        "]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":8},"end":{"row":53,"column":9},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":9},"end":{"row":53,"column":10},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":10},"end":{"row":53,"column":11},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":11},"end":{"row":53,"column":12},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":12},"end":{"row":53,"column":13},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":13},"end":{"row":53,"column":15},"action":"insert","lines":["''"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":15},"end":{"row":53,"column":16},"action":"insert","lines":[";"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":13},"end":{"row":53,"column":14},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":13},"end":{"row":53,"column":14},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":14},"end":{"row":53,"column":15},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":15},"end":{"row":53,"column":16},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":16},"end":{"row":53,"column":17},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":17},"end":{"row":53,"column":18},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":20},"end":{"row":53,"column":21},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":21},"end":{"row":53,"column":22},"action":"insert","lines":["x"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":22},"end":{"row":53,"column":23},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":23},"end":{"row":53,"column":24},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":53,"column":24},"end":{"row":53,"column":25},"action":"insert","lines":[";"]}]}]]},"ace":{"folds":[],"scrolltop":634,"scrollleft":0,"selection":{"start":{"row":59,"column":3},"end":{"row":59,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":2,"state":"php-doc-start","mode":"ace/mode/php"}},"timestamp":1429252895864,"hash":"17e4d6a9f8c9a48f3a7f2a3bdf2832c11748594d"}